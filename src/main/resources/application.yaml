# Application configuration
application:
  loki:
    host: ${APPLICATION_LOKI_HOST:localhost}
    port: ${APPLICATION_LOKI_PORT:3100}
  static-resource-location: /tmp/media/
  static-resource-url: /media/**
# Server configuration
server:
  port: 9090
  forward-headers-strategy: framework
# Spring configuration
spring:
  application:
    name: '@project.name@'
  devtools:
    add-properties: true
  jackson:
    default-property-inclusion: non_null
    serialization:
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    mapper:
      accept-case-insensitive-enums: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:127.0.0.1}:${DB_PORT:5432}/postgres
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:Postgres@123}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      auto-commit: true
      connection-timeout: 30000
      idle-timeout: 30000
      max-lifetime: 60000
      minimum-idle: 5
      maximum-pool-size: 30
      pool-name: blogs-pool
  jpa:
    show-sql: false
    open-in-view: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        bytecode:
          use_reflection_optimizer: false
  flyway:
    table: schema_history
    validate-migration-naming: true
encryption:
  secret:
    password: ${ENCRYPTION_SECRET_PASSWORD:password}
    salt: ${ENCRYPTION_SECRET_SALT:salt}
jwt:
  config:
    ttl: ${JWT_CONFIG_TTL:3000000}
# CORS configuration
cors:
  max-age: ${CORS_MAX_AGE:3600}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET, POST, PUT, DELETE}
  allowed-headers: ${CORS_ALLOWED_HEADERS:Accept, Accept-Language, Authorization, Cache-Control, Content-Type}
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000, http://127.0.0.1:3000}
  exposed-headers: ${CORS_EXPOSED_HEADERS:Authorization, Set-Cookie}
# Actuator configuration
management:
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: [ "health", "prometheus", "metrics" ]
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
# Open API 3 configuration
springdoc:
  title: '@project.name@'
  version: '@project.version@'
  description: '@project.description@'
  show-actuator: true
  swagger-ui:
    use-root-path: true
    display-request-duration: true
    with-credentials: true
    groups-order: desc
# Logging configuration
logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    root: info
    com.minhlq.blogs: info
